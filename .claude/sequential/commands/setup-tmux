#!/bin/bash
# Setup tmux for sequential workflow - GitHub Issues integrated
set -e

# Dynamic detection
PROJECT_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/../../.." && pwd)"
PROJECT_NAME="${PROJECT_NAME:-$(basename "$PROJECT_ROOT")}"
PROJECT_NAME_LOWER=$(echo "$PROJECT_NAME" | tr '[:upper:]' '[:lower:]')
PARENT_DIR="$(dirname "$PROJECT_ROOT")"
WORKTREE_PATH="$PARENT_DIR/${PROJECT_NAME_LOWER}-seq"
SESSION="${PROJECT_NAME_LOWER}-seq"

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

# Check if worktree exists
if [ ! -d "$WORKTREE_PATH" ]; then
    echo -e "${RED}Sequential worktree not found at: $WORKTREE_PATH${NC}"
    echo "Please run .claude/sequential/commands/setup-sequential first"
    exit 1
fi

# Kill existing session if it exists
tmux kill-session -t $SESSION 2>/dev/null || true

echo "Creating tmux session: $SESSION"

# Create new session with main window, using project tmux config
if [ -f "$PROJECT_ROOT/.tmux.conf" ]; then
    tmux -f "$PROJECT_ROOT/.tmux.conf" new-session -d -s $SESSION -n "Primary developer"
else
    tmux new-session -d -s $SESSION -n "Primary developer"
fi

# Window 0: Primary developer agent alone
tmux send-keys -t $SESSION:0.0 "cd $WORKTREE_PATH" C-m
# Don't start Claude yet - let the monitor handle it

# Window 1: Monitor and Status
tmux new-window -t $SESSION:1 -n "Monitor"

# Pane 0: Primary developer Monitor (handles task assignment and primary developer lifecycle)
tmux send-keys -t $SESSION:1.0 "cd $PROJECT_ROOT" C-m
tmux send-keys -t $SESSION:1.0 ".claude/sequential/commands/primary-developer-monitor" C-m

# Pane 1: GitHub Issues view
tmux split-window -h -t $SESSION:1
tmux send-keys -t $SESSION:1.1 "cd $WORKTREE_PATH" C-m
tmux send-keys -t $SESSION:1.1 "watch -n 30 'echo \"=== Open Task Issues ===\"; gh issue list --label task --state open --limit 10; echo; echo \"=== In Progress ===\"; gh issue list --label sequential-wip --state open'" C-m

# Pane 2: Git status
tmux split-window -v -t $SESSION:1.0
tmux send-keys -t $SESSION:1.2 "cd $WORKTREE_PATH" C-m
tmux send-keys -t $SESSION:1.2 "watch -n 5 'git status -s && echo && git log --oneline -5'" C-m

# Window 2: Agent Servers (dev server)
tmux new-window -t $SESSION:2 -n "Agent Servers"

# Pane 0: Dev server for sequential worktree
tmux send-keys -t $SESSION:2.0 "cd $WORKTREE_PATH" C-m
tmux send-keys -t $SESSION:2.0 "echo '=== Starting dev server on port 3001 ==='" C-m
tmux send-keys -t $SESSION:2.0 "PORT=3001 pnpm dev" C-m

# Set focus to primary developer pane
tmux select-window -t $SESSION:0
tmux select-pane -t $SESSION:0.0

echo -e "${GREEN}Session $SESSION created successfully!${NC}"
echo ""
echo "Windows:"
echo "  0 - Primary developer: Claude primary developer (managed by monitor)"
echo "  1 - Monitor:          Primary developer monitor, GitHub issues, git status"
echo "  2 - Agent Servers:    Dev server running on port 3001"
echo ""
echo "The monitor will:"
echo "  - Check for available tasks from GitHub Issues"
echo "  - Start primary developer with specific task assignments"
echo "  - Restart primary developer if it crashes"
echo "  - Handle task transitions"
echo ""
echo "Dev server is running on port 3001 for sequential worktree"
echo ""
echo "To attach: tmux attach-session -t $SESSION"